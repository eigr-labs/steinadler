syntax = "proto3";

package steinadler.dist.protocol;

import "google/protobuf/any.proto";

message Node {
    string name = 1;
    string address = 2;
    int32 port = 3;
}

message Register {
    Node node = 1;
}

message PID {
    string pid = 1;
}

message SpawnOpts {
    repeated string opts = 1;
}

enum Result {
    OK = 0;
    ERROR = 1;
}

message ProcessRequest {
    PID source = 1;
    SpawnOpts opts = 2;
    string mod = 3;
    string fun = 4;
    repeated google.protobuf.Any args = 5;
    bool async = 6;
    string request_hash = 7;
}

message ProcessResponse {
    PID source = 1;
    Result result = 2;
}

message Data {
    oneof action {
        Register register = 1;
        Register unregister = 2;
        ProcessRequest request = 3;
        ProcessResponse response = 4;
    };
}

service DistributionProtocol {
    rpc Handle(stream Data) returns (Data) {}
}